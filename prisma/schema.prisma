generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  password  String
  phone     String
  cpf       String    @unique
  active    Boolean   @default(true)
  tasks     UserTask[]
  createdAt DateTime  @default(now()) @db.Timestamp()
  updatedAt DateTime  @updatedAt
  roleId    Int
  role      Role      @relation(fields: [roleId], references: [id])
}

model Role {
  id          Int      @id @default(autoincrement())
  roleName    String   @unique
  description String?
  roleActive  Boolean  @default(true)
  createdAt   DateTime @default(now()) @db.Timestamp()
  updatedAt   DateTime @updatedAt
  users       User[]
}

model Project {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  status      String    @default("Active") 
  tasks       Task[]
  createdAt   DateTime  @default(now()) @db.Timestamp()
  updatedAt   DateTime  @updatedAt 
  completedAt DateTime? 
}

model Task {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  startAt     DateTime
  dueAt       DateTime
  status      String    @default("Pending")
  priority    String    @default("Medium")
  completedAt DateTime?
  projectId   Int
  project     Project   @relation(fields: [projectId], references: [id])
  users       UserTask[]
  createdAt   DateTime  @default(now()) @db.Timestamp()
  updatedAt   DateTime  @updatedAt
}

model UserTask {
  taskId Int
  userId Int
  task   Task @relation(fields: [taskId], references: [id])
  user   User @relation(fields: [userId], references: [id])

  @@id([taskId, userId])
}
